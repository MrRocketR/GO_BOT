package main

import (
	"fmt"
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

var token string = "7754890352:AAGAZ1tDIhMiwM59MUYwo9C1ZGk21cpfAoA"

// üëâ –ó–∞–¥–∞–Ω–∏–µ 1: –°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É TeamScore!
// –ü–æ–¥—Å–∫–∞–∑–∫–∞: –Ω–∞–º –Ω—É–∂–Ω–∞ –º–∞–ø–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—á–∫–æ–≤ –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
type TeamScore struct {
	scores map[string]int
}

// üëâ –ó–∞–¥–∞–Ω–∏–µ 2: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞
func NewTeamScore() *TeamScore {
	score := TeamScore{scores: make(map[string]int)}
	return &score
}

// üëâ –ó–∞–¥–∞–Ω–∏–µ 3: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—á–∫–æ–≤
func (ts *TeamScore) AddScore(name string) {
	ts.scores[name]++
}

// üëâ –ó–∞–¥–∞–Ω–∏–µ 4: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –æ—á–∫–æ–≤
func (ts *TeamScore) GetScores() string {
	var report string

	for k, v := range ts.scores {
		report += fmt.Sprintf("%s: %d \\n", k, v)

	}
	return report
}

func main() {
	// üëâ –ó–∞–¥–∞–Ω–∏–µ 5: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π –±–æ—Ç–∞ —Å —Ç–≤–æ–∏–º —Ç–æ–∫–µ–Ω–æ–º
	bot, err := tgbotapi.NewBotAPI(token)
	if err != nil {
		log.Panic("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–æ—Ç–∞:", err)
	}

	// –°–æ–∑–¥–∞–µ–º —Å—á–µ—Ç—á–∏–∫
	teamScore := NewTeamScore()

	// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates, err := bot.GetUpdatesChan(u)

	fmt.Println("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥–µ—Ç –∫–æ–º–∞–Ω–¥!")

	// üëâ –ó–∞–¥–∞–Ω–∏–µ 6: –ù–∞–ø–∏—à–∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥
	for update := range updates {
		if update.Message == nil {
			continue
		}

		chatID := update.Message.Chat.ID
		text := update.Message.Text

		switch text {
		case "/start":
			msg := tgbotapi.NewMessage(chatID, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç —É—á–µ—Ç–∞ –æ—Ü–µ–Ω–æ–∫ –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–∏! –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ü–µ–Ω–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /score. –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏ –±–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ /add [–∏–º—è]")
			bot.Send(msg)
		case "/score":
			msg := tgbotapi.NewMessage(chatID, fmt.Sprintf("%s: %s \\n", "–°–æ—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥—ã —Å –æ—á–∫–∞–º–∏", teamScore.GetScores()))
			bot.Send(msg)
		}

		// –¢–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å!
		// –ü–æ–¥—Å–∫–∞–∑–∫–∏:
		// 1. –ò—Å–ø–æ–ª—å–∑—É–π switch –∏–ª–∏ if –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
		// 2. –ö–æ–º–∞–Ω–¥—ã: /start, /score, /add [–∏–º—è]
		// 3. –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π:
		//    msg := tgbotapi.NewMessage(chatID, —Ç–µ–∫—Å—Ç)
		//    bot.Send(msg)
	}
}
